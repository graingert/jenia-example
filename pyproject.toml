[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.metadata]
module = "example"
author = "Jenia"
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]
description-file = "README.rst"
requires = ["fissix"]
requires-python = "~=3.8"

[tool.flit.metadata.requires-extra]
test = ["pytest"]

[tool.isort]
profile = "black"
add_imports=["from __future__ import annotations"]

[tool.pytest.ini_options]
addopts = [
  "--strict-config",
  "--strict-markers",
]
xfail_strict = true
junit_family = "xunit2"
filterwarnings = ["error"]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist =
    py39,lint
minversion=3.20.1
isolated_build=true
requires=
    virtualenv >= 20.1.0
    tox-wheel >= 0.6.0
    tox-gh-actions >= 2.1.0

[testenv]
extras = test
commands = pytest {posargs}
wheel = True
wheel_build_env = build

[testenv:build]
# empty environment to build universal wheel once per tox invocation
# https://github.com/ionelmc/tox-wheel#build-configuration

[testenv:lint]
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure {posargs}
skip_install = true

[testenv:release]
deps = pep517
whitelist_externals =
    cp
    rm
commands =
    rm -rf {toxinidir}/dist
    cp -r {distdir} {toxinidir}/dist # copy the wheel built by tox-wheel
    {envpython} -m pep517.build --source --out-dir={toxinidir}/dist {toxinidir}
"""
